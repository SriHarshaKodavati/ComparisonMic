{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || '';\n\n// Create an axios instance\nconst API = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Upload image for analysis\nexport const uploadImage = async imageFile => {\n  const formData = new FormData();\n  formData.append('image', imageFile);\n  const config = {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  };\n  try {\n    const response = await API.post('/api/upload', formData, config);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n      error: 'Failed to upload image'\n    };\n  }\n};\n\n// Generate PDF report\nexport const generatePdfReport = async data => {\n  try {\n    const response = await API.post('/api/generate_pdf', data, {\n      responseType: 'blob'\n    });\n\n    // Create a blob URL for the PDF\n    const blob = new Blob([response.data], {\n      type: 'application/pdf'\n    });\n    const url = window.URL.createObjectURL(blob);\n\n    // Create a link and trigger download\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', `medical_report_${Date.now()}.pdf`);\n    document.body.appendChild(link);\n    link.click();\n\n    // Clean up\n    link.parentNode.removeChild(link);\n    window.URL.revokeObjectURL(url);\n    return true;\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n      error: 'Failed to generate PDF'\n    };\n  }\n};\n\n// Check API health\nexport const checkApiHealth = async () => {\n  try {\n    const response = await API.get('/api/health');\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || {\n      error: 'API health check failed'\n    };\n  }\n};\nexport default {\n  uploadImage,\n  generatePdfReport,\n  checkApiHealth\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","API","create","baseURL","headers","uploadImage","imageFile","formData","FormData","append","config","response","post","data","error","_error$response","generatePdfReport","responseType","blob","Blob","type","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","Date","now","body","appendChild","click","parentNode","removeChild","revokeObjectURL","_error$response2","checkApiHealth","get","_error$response3"],"sources":["C:/Users/sriha/OneDrive/Desktop/medical-image-caption/frontend/src/services/apiService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || '';\r\n\r\n// Create an axios instance\r\nconst API = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Upload image for analysis\r\nexport const uploadImage = async (imageFile) => {\r\n  const formData = new FormData();\r\n  formData.append('image', imageFile);\r\n\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  };\r\n\r\n  try {\r\n    const response = await API.post('/api/upload', formData, config);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || { error: 'Failed to upload image' };\r\n  }\r\n};\r\n\r\n// Generate PDF report\r\nexport const generatePdfReport = async (data) => {\r\n  try {\r\n    const response = await API.post('/api/generate_pdf', data, {\r\n      responseType: 'blob',\r\n    });\r\n    \r\n    // Create a blob URL for the PDF\r\n    const blob = new Blob([response.data], { type: 'application/pdf' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    \r\n    // Create a link and trigger download\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.setAttribute('download', `medical_report_${Date.now()}.pdf`);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    \r\n    // Clean up\r\n    link.parentNode.removeChild(link);\r\n    window.URL.revokeObjectURL(url);\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    throw error.response?.data || { error: 'Failed to generate PDF' };\r\n  }\r\n};\r\n\r\n// Check API health\r\nexport const checkApiHealth = async () => {\r\n  try {\r\n    const response = await API.get('/api/health');\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || { error: 'API health check failed' };\r\n  }\r\n};\r\n\r\nexport default {\r\n  uploadImage,\r\n  generatePdfReport,\r\n  checkApiHealth,\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,EAAE;;AAEnD;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,WAAW,GAAG,MAAOC,SAAS,IAAK;EAC9C,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,SAAS,CAAC;EAEnC,MAAMI,MAAM,GAAG;IACbN,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC;EAED,IAAI;IACF,MAAMO,QAAQ,GAAG,MAAMV,GAAG,CAACW,IAAI,CAAC,aAAa,EAAEL,QAAQ,EAAEG,MAAM,CAAC;IAChE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACd,MAAM,EAAAA,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAI;MAAEC,KAAK,EAAE;IAAyB,CAAC;EACnE;AACF,CAAC;;AAED;AACA,OAAO,MAAME,iBAAiB,GAAG,MAAOH,IAAI,IAAK;EAC/C,IAAI;IACF,MAAMF,QAAQ,GAAG,MAAMV,GAAG,CAACW,IAAI,CAAC,mBAAmB,EAAEC,IAAI,EAAE;MACzDI,YAAY,EAAE;IAChB,CAAC,CAAC;;IAEF;IACA,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACR,QAAQ,CAACE,IAAI,CAAC,EAAE;MAAEO,IAAI,EAAE;IAAkB,CAAC,CAAC;IACnE,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC;;IAE5C;IACA,MAAMO,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGP,GAAG;IACfI,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,kBAAkBC,IAAI,CAACC,GAAG,CAAC,CAAC,MAAM,CAAC;IACjEL,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACR,IAAI,CAAC;IAC/BA,IAAI,CAACS,KAAK,CAAC,CAAC;;IAEZ;IACAT,IAAI,CAACU,UAAU,CAACC,WAAW,CAACX,IAAI,CAAC;IACjCH,MAAM,CAACC,GAAG,CAACc,eAAe,CAAChB,GAAG,CAAC;IAE/B,OAAO,IAAI;EACb,CAAC,CAAC,OAAOP,KAAK,EAAE;IAAA,IAAAwB,gBAAA;IACd,MAAM,EAAAA,gBAAA,GAAAxB,KAAK,CAACH,QAAQ,cAAA2B,gBAAA,uBAAdA,gBAAA,CAAgBzB,IAAI,KAAI;MAAEC,KAAK,EAAE;IAAyB,CAAC;EACnE;AACF,CAAC;;AAED;AACA,OAAO,MAAMyB,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAM5B,QAAQ,GAAG,MAAMV,GAAG,CAACuC,GAAG,CAAC,aAAa,CAAC;IAC7C,OAAO7B,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAA2B,gBAAA;IACd,MAAM,EAAAA,gBAAA,GAAA3B,KAAK,CAACH,QAAQ,cAAA8B,gBAAA,uBAAdA,gBAAA,CAAgB5B,IAAI,KAAI;MAAEC,KAAK,EAAE;IAA0B,CAAC;EACpE;AACF,CAAC;AAED,eAAe;EACbT,WAAW;EACXW,iBAAiB;EACjBuB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}